apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "swarm.fullname" . }}-bootnode
  labels:
    app: {{ template "swarm.name" . }}
    chart: {{ template "swarm.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: bootnode
spec:
  serviceName: {{ template "swarm.fullname" . }}-bootnode
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "swarm.name" . }}
      release: {{ .Release.Name }}
      component: bootnode
  template:
    metadata:
      labels:
        app: {{ template "swarm.name" . }}
        release: {{ .Release.Name }}
        component: bootnode
    {{- if or (eq .Values.bootnode.image.tag "latest") (eq .Values.bootnode.image.tag "edge") }}
      annotations:
        # Note: 'latest' or 'edge' tag is beeing used, therefore we keep changing
        # this annotation to force a redeployment of the pods within the StatefulSet
        "release-timestamp": {{.Release.Time.Seconds | quote }}
    {{- end }}
    spec:
      containers:
      - name: bootnode
        image: {{ .Values.bootnode.image.repository }}:{{ .Values.bootnode.image.tag }}
        imagePullPolicy: {{ .Values.bootnode.imagePullPolicy }}
        resources:
{{ toYaml .Values.bootnode.resources | indent 10 }}
        command:
        - sh
        - -ac
        - >
          /run.sh
          --debug
          --bootnode-mode
          --nodekey=/keys/bootnode.key
          --verbosity={{ .Values.bootnode.config.verbosity }}
          --maxpeers 2000
          --nat=ip:$POD_IP
          --port=30301
          --bzznetworkid={{ .Values.bootnode.config.bzznetworkid }}
          --bootnodes=enode://0db3ed33199e4168944c2c0a2b5994c8521ccb942f43fb432f481d88a02c6dee71d4e1da3727a29d4952d7653c862f74c6822d68abf6ae63d9251bbece8b87a5@10.0.55.155:30499
{{- range $i, $flag := .Values.bootnode.config.extraFlags }}
          {{ $flag }}
{{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "swarm.fullname" . }}
              key: PASSWORD
        ports:
        - name: network
          containerPort: 30301
        volumeMounts:
        - name: keys
          mountPath: /keys
          readOnly: true
      volumes:
      - name: keys
        secret:
          secretName: {{ template "swarm.fullname" . }}-bootnode
{{- with .Values.bootnode.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.bootnode.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.bootnode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
